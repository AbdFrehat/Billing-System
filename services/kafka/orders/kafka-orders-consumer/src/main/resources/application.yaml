server:
  port: 6041
spring:
  webflux:
    base-path: /orderizer/kafka/orders/consumer
  application:
    name: kafka-orders-consumer
  cloud:
    function:
      definition: data-delete-orders; data-update-orders; data-save-orders
    stream:
      bindings:
        data-delete-orders-in-0:
          destination: data.delete.orders
          group: dataDeleteOrdersGroup
          content-type: application/json
          consumer:
            batch-mode: true
            max-attempts: 1
            use-native-decoding: true
        data-update-orders-in-0:
          destination: data.update.orders
          group: dataUpdateOrdersGroup
          content-type: application/json
          consumer:
            batch-mode: true
            max-attempts: 1
            use-native-decoding: true
        data-save-orders-in-0:
          destination: data.save.orders
          group: dataSaveOrdersGroup
          content-type: application/json
          consumer:
            batch-mode: true
            max-attempts: 1
            use-native-decoding: true
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: true
          min-partition-count: 3
          replication-factor: 1
          auto-add-partitions: true
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
            spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        bindings:
          data-delete-orders-in-0:
            consumer:
              start-offset: latest
              configuration:
                spring.json.value.default.type: com.orderizer.kafka.orders.consumer.model.entity.DataDeleteOrderEntity
          data-update-orders-in-0:
            consumer:
              start-offset: latest
              configuration:
                spring.json.value.default.type: com.orderizer.kafka.orders.consumer.model.entity.DataUpdateOrderEntity
          data-save-orders-in-0:
            consumer:
              start-offset: latest
              configuration:
                spring.json.value.default.type: com.orderizer.kafka.orders.consumer.model.entity.DataSaveOrderEntity
config:
  services:
    context-path:
      data-manager: "http://localhost:6080/orderizer/data/manager/v1/"